#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Scalak
# Copyright 2010 Bartosz Szatkowski <bulislaw@linux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
Scalak ftp auth is authorization module for prueFTP ftp server, it is
intended to be used with Scalak and Scalak data base schema.

Usage:
    pure-authd -s /var/run/ftpd.sock -r <script>
    pure-ftpd  -lextauth:/var/run/ftpd.sock

Service configuration is a bit tricky:
    * echo 1 > /etc/pure-ftpd/config/MinUID
    * echo <script_path> > /etc/pure-ftpd/config/ExtAuth
    * ln -s /etc/pure-ftpd/config/ExtAuth /etc/pure-ftpd/auth/extauth
"""

from os import getenv, path
import sys

from scalak.utils import *

if __name__ == "__main__":

    config = getConfig()

    try:
        uid = config.get("ftp", "uid")
    except Error:
        uid = 33

    try:
        uid = config.get("ftp", "gid")
    except Error:
        gid = 33

    try:
        fdir = config.get("general", "projects_dir")
    except Error:
        fdir = "/var/scalak/projects"

    project = getenv("AUTHD_ACCOUNT")
    passwd = getenv("AUTHD_PASSWORD")

    if not project or not passwd:
        print "auth_ok:-1"
        print "end"
        sys.exit(1)

    if not valid_password(None, getAdmin(project), passwd):
        print "auth_ok:-1"
        print "end"
        sys.exit(1)

    print "auth_ok:1"
    print "uid:{0}".format(uid)
    print "gid:{0}".format(gid)
    print "dir:{0}".format(path.join(fdir, project,  "www/"))
    print "end"
