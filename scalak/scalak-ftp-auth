#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Scalak
# Copyright 2010 Bartosz Szatkowski <bulislaw@linux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
Scalak ftp auth is authorization module for prueFTP ftp server, its 
intended to be used with Scalak and Scalak data base schema
Usage:
    pure-authd -s /var/run/ftpd.sock -r /usr/bin/ftp-auth-handler &
    pure-ftpd  -lextauth:/var/run/ftpd.sock &
"""

from os import getenv, path
from ConfigParser import SafeConfigParser, Error
import sys

from scalak.utils import *

if __name__ == "__main__":
    config = SafeConfigParser()
    config.read("/etc/scalak.conf")
    try:
        uid = config.get("ftp", "uid")
    except Error:
        uid = 33
    try:
        uid = config.get("ftp", "gid")
    except Error:
        gid = 33
    try:
        dir = config.get("general", "projects_dir")
    except Error:
        dir = "/var/scalak/projects"


    user = getenv("AUTHD_ACCOUNT")
    passwd = getenv("AUTHD_PASSWORD")

    if not user or not passwd:
        print "auth_ok:-1"
        print "end"
        sys.exit(1)

    con = openDB()
    c = con.cursor()

    res = c.execute("select password, id from projects, users where id=%s \
            and admin=login and active=1 limit 1", user)

    if not res:
        print "auth_ok:0"
        print "end"
        sys.exit(1)

    res = c.fetchone()
    
    if htpasswd(passwd, res[0][0] + res[0][1]) != res[0]:
        print htpasswd(passwd, res[0][0] + res[0][1]) ,res[0]
        print "auth_ok:-1"
        print "end"
        sys.exit(1)

    print "auth_ok:1"
    print "uid:{0}".format(uid)
    print "gid:{0}".format(gid)
    print "dir:{0}".format(path.join(dir, res[1],  "www/"))
    print "end"
